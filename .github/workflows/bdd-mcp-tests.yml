name: BDD LLM MCP Test Suite

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install Cucumber.js
      run: npm install -g @cucumber/cucumber

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
          node_modules
        key: ${{ runner.os }}-cargo-node-${{ hashFiles('**/Cargo.lock', '**/package-lock.json') }}

    - name: Install Node dependencies
      run: npm ci

    - name: Build MCP Server
      run: cargo build -p opentdf-mcp-server --release

    - name: Run BDD Test Suite
      run: |
        # Start MCP server in background
        cargo run -p opentdf-mcp-server --release > server.log 2>&1 &
        SERVER_PID=$!
        
        # Wait for server to start
        echo "Waiting for MCP server to start..."
        timeout 30 bash -c 'until grep -q "Server started" server.log; do sleep 1; done'
        
        # Run Cucumber BDD tests
        npx cucumber-js --format json:cucumber-report.json --format html:cucumber-report.html
        
        # Capture test exit code
        TEST_EXIT_CODE=$?
        
        # Cleanup
        echo "Shutting down MCP server..."
        kill $SERVER_PID
        
        # Return original test exit code
        exit $TEST_EXIT_CODE

    - name: Generate BDD Test Report
      if: always()
      run: node tools/generate-bdd-report.js

    - name: Upload BDD test reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: bdd-test-reports
        path: |
          cucumber-report.json
          cucumber-report.html
          bdd-test-report/

    - name: Upload server logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: mcp-server-logs
        path: server.log